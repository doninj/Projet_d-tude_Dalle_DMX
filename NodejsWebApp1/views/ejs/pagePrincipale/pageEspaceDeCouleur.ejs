<%- include('head') %>
<link rel="stylesheet" href="/css/styleEspaceDeCouleur.css">
<link rel="stylesheet" href="/css/styleGlobal.css">
<script src="/vue.js"></script>


<body onload="chargerLoader()">
   
    <nav class="navbar navbar-light py-0 bg-light navbar-expand-sm py-md-0 ">
        <button class="navbar-toggler mt-1" type="button" data-toggle="collapse" data-target="#navbarNav"
            aria-expanded="false" aria-label="Toggle navigation">
            <i class="fa fa-bars"></i>
        </button>
        <div class="navbar-collapse collapse" id="navbarNav">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item py-0"><a href="/presentation" class="nav-link ">Table de mixage</a></li>
                <li class="nav-item py-0"><a href="/scene" class="nav-link ">Scènes</a></li>
                <li class="nav-item py-0"><a href="/melangeur" class="nav-link active ">Espace de couleurs </a></li>
                <li class="nav-item py-0"><a href="/jeux" class="nav-link ">Saturation</a></li>
                
              
            </ul>
 <ul class="nav justify-content-center">
    <label class="switch">
        <input onchange="changerbackground()" id="backgroundChange" type="checkbox">
        <span class="slider round"></span>
    </label>
            </ul>
            <ul class="navbar-nav ml-auto">
                <div class="form-inline my-2 my-lg-0">    
                    <div id="choixCaisson">
                        <select class="form-control" v-model="selected" onchange=changeCaisson()>
                         <option v-for="option in options" v-bind:value="option.value">
                          {{ option.text + " "+ option.value }}
                          </option>
                        </select>
                      </div>
           
                <li class="nav-item py-0"><button id="help" onclick="information()">Help</button>

                </div>
            </ul>
    </nav>

    <div id="loader">
        <div class="circle"></div>
    </div>
    <div id="Total">
        <p id="couleur_p"> Choisissez 3 couleurs de votre espace colorimétrique définissant les sommets du triangle
            (gamut)</p>
  
    <!-- Boucle pour recuperer les valeur du selecteur dans le vue JS-->
    <!-- V-for permet de faire une boucle 
                   V-bind permet de mettre le "value" par la donnée de option.value
                   @click agit comme v-on:click. Cela permet d'appeler une fonction -->
    <div id="selecteurCouleur">

        <!--  Selecteur rouge-->
        <select id="selecteur3" class="form-control" v-model="selected3" onchange=ajustCursorRouge();>
            <option v-for="(option) in options3" v-bind:value="option.value">
                {{ option.text}}
            </option>
        </select>

        <!--  Selecteur  vert-->
        <select id="selecteur2" class="form-control" v-model="selected2" onchange=ajustCursorVert();>
            <option v-for="(option) in options2" v-bind:value="option.value">
                {{ option.text}}
            </option>
        </select>
        <!--  Selecteur  bleu-->

        <select id="selecteur1" class="form-control" v-model="selected" onchange=ajustCursorBleu();>
            <option v-for="(option) in options" v-bind:value="option.value">
                {{ option.text}}
            </option>
        </select>

	

    </div>
    
    <div class=" CIE">
        <cie-xy-chart class="graphCIE" width="300" height="300"></cie-xy-chart>
        <div id="test">
            <div class=" curseur">
                <div id="curseurRouge">
                    <h1 id="valeurCurseur1">0%</h1>
                    <input class="curseur15" type="range" id="id_nm_590" min="0" max="100" value="0"  step="1">
                </div>
                <div id="curseurVert">
                    <h1 id="valeurCurseur2">0%</h1>
                    <input class="curseur10" type="range" id="id_nm_502" min="0" max="100" value="0"  step="1">
                </div>
                <div id="curseurBleu">
                    <h1 id="valeurCurseur3">0%</h1>
                    <input class="curseur1" type="range" id="id_nm_390" min="0" max="100" value="0" step="1">
                </div>
                <div id="couleurMélange"></div>

            </div>
        </div>
    </div>
</div>
    <%- include('../page_information/EspaceDeCouleurInformation.ejs') %>
    <div id="rotationInterdit">
        <p>La page n'est pas adapté pour le mode portrait. Remettez-vous en mode paysage.
        </p>
      </div>
</body>



<script src="/js/ScriptDesPages/nav.js"></script>
<script>

      

        var curseurCouleur = true;
        
        function changerCurseur() {
          if (curseurCouleur === true) {
            document.getElementById("curseurBlanc").style.display = 'block';
            document.getElementById('curseurCouleur').style.display = 'none';
            curseurCouleur = false;
          } else {
            document.getElementById("curseurBlanc").style.display = 'none';
            document.getElementById('curseurCouleur').style.display = 'block';
            curseurCouleur = true;
          }
        }
        var CaissonVueModel = new Vue({
          el: '#choixCaisson',
          data: {
            counter: 0,
            selected: 1,
            message: "",
            caisson: "Caisson",
            options: [{
                text: 'Caisson',
                value: 1
              },
              {
                text: 'Caisson',
                value: 2
              },
              {
                text: 'Caisson',
                value: 3
              },
              {
                text: 'Caisson',
                value: 4
              },
            ],
            value: 5
          },
      
          //methode pour le vue.JS
          methods: {
            ajouterCaisson: function () {
              this.options.push({
                text: this.caisson,
                value: this.value
              })
              this.value++
            },
            supprimerCaisson: function () {
              this.options.pop()
              this.value--
            }
          }
        })
      
    //Variable
    var idCurseurBleu;
    var idCurseurVert;
    var idCurseurRouge;


    //Début de Vuejs
    var vm = new Vue({
        el: '#selecteurCouleur',
        data() {
            return {
                //variable permettant de récuperer les valeurs selectionner des selects
                selected: 390,
                selected2: 502,
                selected3: 590,

                //valeur des selects
                options: [{
                        text: '390 nm',
                        value: 390,
                        valuex: 0.1818,
                        valuey: 0.0388,
                        valueX: 25.7,
                        valueY: 5.49,
                        valueZ: 110.4,
                    },
                    {
                        text: '403 nm',
                        value: 403,
                        valuex: 0.1701,
                        valuey: 0.0411,
                        valueX: 92.5,
                        valueY: 22.3,
                        valueZ: 428.9
                    },
                    {
                        text: '410 nm',
                        value: 410,
                        valuex: 0.1722,
                        valuey: 0.0146,
                        valueX: 230,
                        valueY: 19.5,
                        valueZ: 1086
                    },
                    {
                        text: '440 nm',
                        value: 440,
                        valuex: 0.1608,
                        valuey: 0.0184,
                        valueX: 1154,
                        valueY: 131.8,
                        valueZ: 5889
                    },
                    {
                        text: '490 nm',
                        value: 490,
                        valuex: 0.0757,
                        valuey: 0.0757,
                        valueX: 119.5,
                        valueY: 519.7,
                        valueZ: 940.4
                    }
                ],

                options2: [{
                        text: '502 nm',
                        value: 502,
                        valuex: 0.0721,
                        valuey: 0.5899,
                        valueX: 102.2,
                        valueY: 836.7,
                        valueZ: 479.6
                    },
                    {
                        text: '512 nm',
                        value: 512,
                        valuex: 0.1215,
                        valuey: 0.6821,
                        valueX: 133.6,
                        valueY: 750,
                        valueZ: 215.9
                    },
                    {
                        text: '520 nm',
                        value: 520,
                        valuex: 0.194,
                        valuey: 0.7289,
                        valueX: 394.2,
                        valueY: 1486,
                        valueZ: 157
                    },
                    {
                        text: '530 nm',
                        value: 530,
                        valuex: 0.1867,
                        valuey: 0.7374,
                        valueX: 346.3,
                        valueY: 1368,
                        valueZ: 140.7
                    }
                ],
                options3: [{

                        text: '590 nm',
                        value: 590,
                        valuex: 0.5738,
                        valuey: 0.4249,
                        valueX: 731.2,
                        valueY: 541.5,
                        valueZ: 1.64
                    },
                    {
                        text: '605 nm',
                        value: 605,
                        valuex: 0.6278,
                        valuey: 0.371,
                        valueX: 865.5,
                        valueY: 510.5,
                        valueZ: 1.49
                    },
                    {
                        text: '620 nm',
                        value: 620,
                        valuex: 0.6693,
                        valuey: 0.33,
                        valueX: 1498,
                        valueY: 738.5,
                        valueZ: 2.03
                    },
                    {
                        text: '630 nm',
                        value: 630,
                        valuex: 0.6919,
                        valuey: 0.3073,
                        valueX: 990.8,
                        valueY: 440,
                        valueZ: 1.15
                    },
                    {
                        text: '655 nm',
                        value: 655,
                        valuex: 0.7174,
                        valuey: 0.2812,
                        valueX: 440.9,
                        valueY: 172.8,
                        valueZ: 0.891
                    }


                ]
            }
        },
        //debut des méthodes
        methods: {

            //ajouterCurseurBleu permet d'ajouter les curseurs bleue selon le 1er selecteur de couleur.curseur

           setColorR() {
              CalculMélangeRGB();
               commanderColorR();
               document.getElementById("valeurCurseur1").innerHTML = document.getElementsByTagName("input")[1].value + "%";

    },
           setColorV() {
                CalculMélangeRGB();
                commanderColorV();

    document.getElementById("valeurCurseur2").innerHTML = document.getElementsByTagName("input")[2].value + "%";
    },
    
    
    setColorB() {
        CalculMélangeRGB();
        commanderColorB();
    document.getElementById("valeurCurseur3").innerHTML = document.getElementsByTagName("input")[3].value + "%";
    },



         

            ajouterCurseurBleu() {

                recupvaleurxBleu(); //permet de définir les x et y selon le choix du selecteur
                const cieChart = document.querySelector(
                    'cie-xy-chart'); // Tu récupère le premier diagramme de ton DOM (par exemple.)
                //boucle if pour savoir quel choix du selecteur et si il contient un curseur
                if (this.selected === 390) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.
                    document.getElementsByTagName("input")[3].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_390");
                    x.setAttribute("class", "curseur1");
                     x.setAttribute("oninput", "vm.setColorB();");
                    x.setAttribute("value", "0");
                    document.getElementById("curseurBleu").appendChild(x);
                    cieChart.redraw();
                } else if (this.selected === 403) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.

                    document.getElementsByTagName("input")[3].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_403");
                    x.setAttribute("class", "curseur2");
                    x.setAttribute("oninput", "vm.setColorB();");

                    document.getElementById("curseurBleu").appendChild(x);
                    cieChart.redraw();


                } else if (this.selected === 410) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.

                    document.getElementsByTagName("input")[3].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_410");
                    x.setAttribute("class", "curseur3");
                    x.setAttribute("oninput", "vm.setColorB();");

                    document.getElementById("curseurBleu").appendChild(x);
                    cieChart.redraw();


                } else if (this.selected === 440) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.

                    document.getElementsByTagName("input")[3].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_440");
                    x.setAttribute("class", "curseur5");
                    x.setAttribute("oninput", "vm.setColorB();");

                    document.getElementById("curseurBleu").appendChild(x);
                    cieChart.redraw();
                } else if (this.selected === 490) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.
                    document.getElementsByTagName("input")[3].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_490");
                    x.setAttribute("class", "curseur9");
                    x.setAttribute("oninput", "vm.setColorB();");
                    x.setAttribute("value", "0");
                    document.getElementById("curseurBleu").appendChild(x);
                    cieChart.redraw();

                }

                document.getElementsByTagName("input")[3].value = 0
                idCurseurBleu = document.getElementsByTagName("input")[3].id; //Récupère l'id du curseur utilisé ;
                document.getElementById("valeurCurseur3").innerHTML = document.getElementsByTagName("input")[3].value + "%";
            },



            //ajouterCurseurVert permet d'ajouter les curseurs vert selon le 1er selecteur de couleur.curseur
            ajouterCurseurVert() {
                const cieChart = document.querySelector(
                    'cie-xy-chart'); // Tu récupère le premier diagramme de ton DOM (par exemple.)

                recupvaleurxVert();
                var element = document.getElementById("curseurVert").contains(document.getElementsByTagName(
                    "input")[1]);


                if (this.selected2 === 502) {

                    CalculMélangeRGB(); //appel la fonction pour le calcul.
                    document.getElementsByTagName("input")[2].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_502");
                    x.setAttribute("class", "curseur10");
                    x.setAttribute("oninput", "vm.setColorV();");

                    document.getElementById("curseurVert").appendChild(x);
                    cieChart.redraw();


                } else if (this.selected2 === 512) {

                    CalculMélangeRGB(); //appel la fonction pour le calcul.

                    document.getElementsByTagName("input")[2].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_512");
                    x.setAttribute("class", "curseur11");
                    x.setAttribute("oninput", "vm.setColorV();");

                    document.getElementById("curseurVert").appendChild(x);
                    cieChart.redraw();


                } else if (this.selected2 === 520)

                {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.

                    document.getElementsByTagName("input")[2].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_520");
                    x.setAttribute("class", "curseur12");
                    x.setAttribute("oninput", "vm.setColorV();");

                    document.getElementById("curseurVert").appendChild(x);
                    cieChart.redraw();

                } else if (this.selected2 === 530)

                {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.

                    document.getElementsByTagName("input")[2].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_530");
                    x.setAttribute("class", "curseur13");
                    x.setAttribute("oninput", "vm.setColorV();");

                    document.getElementById("curseurVert").appendChild(x);
                    cieChart.redraw();

                }
                document.getElementsByTagName("input")[2].value = 0
                idCurseurVert = document.getElementsByTagName("input")[2].id; //Récupère l'id du curseur utilisé ;
                document.getElementById("valeurCurseur2").innerHTML = document.getElementsByTagName("input")[2].value + "%";

            },
            //ajouterCurseurVert permet d'ajouter les curseurs vert selon le 1er selecteur de couleur.curseur
            ajouterCurseurRouge() {
                CalculMélangeRGB();
                const cieChart = document.querySelector(
                    'cie-xy-chart'); // Tu récupère le premier diagramme de ton DOM (par exemple.)
                    recupvaleurxRouge();
               

                if (this.selected3 === 655) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.

                    document.getElementsByTagName("input")[1].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_655");
                    x.setAttribute("class", "curseur19");
                    x.setAttribute("oninput", "vm.setColorR();");
                    document.getElementById("curseurRouge").appendChild(x);
                    cieChart.redraw();

                } else if (this.selected3 === 630) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.
                    document.getElementsByTagName("input")[1].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_630");
                    x.setAttribute("class", "curseur18");
                    x.setAttribute("oninput", "vm.setColorR();");
                    document.getElementById("curseurRouge").appendChild(x);
                    cieChart.redraw();
                } else if (this.selected3 === 620) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.
                    document.getElementsByTagName("input")[1].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_620");
                    x.setAttribute("class", "curseur17");
                    x.setAttribute("oninput", "vm.setColorR();");
                    document.getElementById("curseurRouge").appendChild(x);
                    cieChart.redraw();

                } else if (this.selected3 === 605) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.
                    document.getElementsByTagName("input")[1].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_605");
                    x.setAttribute("class", "curseur16");
                    x.setAttribute("oninput", "vm.setColorR();");
                    document.getElementById("curseurRouge").appendChild(x);
                    cieChart.redraw();

                } else if (this.selected3 === 590) {
                    CalculMélangeRGB(); //appel la fonction pour le calcul.
                    document.getElementsByTagName("input")[1].remove();
                    var x = document.createElement("input");
                    x.setAttribute("type", "range");
                    x.setAttribute("id", "id_nm_590");
                    x.setAttribute("class", "curseur15");
                    x.setAttribute("oninput", "vm.setColorR();");
                    document.getElementById("curseurRouge").appendChild(x);
                    cieChart.redraw();

                }
                document.getElementsByTagName("input")[1].value = 0;
                idCurseurRouge = document.getElementsByTagName("input")[1].id; //Récupère l'id du curseur utilisé ;
                document.getElementById("valeurCurseur1").innerHTML = document.getElementsByTagName("input")[1].value + "%";

            },
            ///////test/////////

			//Recupere l'id du curseur bleu qui est utilisé et appel la fonction ajouterCurseurBleu() qui
			//permet de changer l'id du curseur utilisé grâce a la liste déroulante
			//Parametre d'entrée : Aucune
			//Valeur retournée  : idCurseurBleu
            getIdCurseurBleu() {
                vm.ajouterCurseurBleu()
                return idCurseurBleu;
            },

			
			//Recupere l'id du curseur vert qui est utilisé et appel la fonction ajouterCurseurVert() qui
			//permet de changer l'id du curseur utilisé grâce a la liste déroulante
			//Parametre d'entrée : Aucune
			//Valeur retournée  : idCurseurVert
            getIdCurseurVert() {
                vm.ajouterCurseurVert();
                return idCurseurVert;
            },

			
			//Recupere l'id du curseur rouge qui est utilisé et appel la fonction ajouterCurseurRouge() qui
			//permet de changer l'id du curseur utilisé grâce a la liste déroulante
			//Parametre d'entrée : Aucune
			//Valeur retournée  : idCurseurRouge
            getIdCurseurRouge() {
                vm.ajouterCurseurRouge();
                return idCurseurRouge;
            }




            ///////test/////////

        }
        //fin des méthodes
    }) //fin du Vuejs


    document.querySelector("#selecteur1").addEventListener("change", (e) => {
        document.querySelector("#selecteur1").style.backgroundColor = getComputedStyle(e.target.selectedOptions[
            0]).backgroundColor;
    })
    document.querySelector("#selecteur2").addEventListener("change", (e) => {
        document.querySelector("#selecteur2").style.backgroundColor = getComputedStyle(e.target.selectedOptions[
            0]).backgroundColor;
    })
    document.querySelector("#selecteur3").addEventListener("change", (e) => {
        document.querySelector("#selecteur3").style.backgroundColor = getComputedStyle(e.target.selectedOptions[
            0]).backgroundColor;
    })



    document.getElementById("selecteur1").style.backgroundColor = "#79008d";
    document.querySelector("#selecteur1").style.color = "white";
    document.getElementById("selecteur2").style.backgroundColor = "#00ff7b";
    document.querySelector("#selecteur2").style.color = "white";
    document.getElementById("selecteur3").style.backgroundColor = "rgb(255, 223, 0)";
    document.querySelector("#selecteur3").style.color = "white";
</script>
<script type="text/javascript" src="/js/ScriptDesPages/scriptEspaceDeCouleur.js"></script>